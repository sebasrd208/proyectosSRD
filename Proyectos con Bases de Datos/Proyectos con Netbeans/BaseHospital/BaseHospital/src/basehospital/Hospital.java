package basehospital;
import java.io.*;
import java.awt.*;
import java.sql.*;
import javax.swing.*;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;


/**
 *
 * @author sebas
 */
public class Hospital extends javax.swing.JFrame {

    String url="jdbc:mysql://localhost/hospital";
    String usuario="root";
    String password="";
    public Hospital(){        
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/imagenes/database.png")).getImage());
        setLocationRelativeTo(null);
        setResizable(false);
        setTitle("Base de Datos Hospital");
        int sesion=BaseHospital.sesion;
        if(sesion==1){
            setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        }else{
            setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        }
        
        buscar.setEnabled(false);
        registrar.setEnabled(false);
        eliminar.setEnabled(false);
        modificar.setEnabled(false);
        limpiar.setEnabled(false);
        
    }
    
    public void metodo(){
        BaseHospital.model.setRowCount(0);
        BaseHospital.model.setColumnCount(0);        
        try{
            Connection cnn=DriverManager.getConnection(url, usuario, password);
            PreparedStatement psp=cnn.prepareStatement("SELECT * FROM VACACIONES");

            ResultSet set=psp.executeQuery();

            BaseHospital.model.addColumn("No. de Expediente");
            BaseHospital.model.addColumn("Nombre");
            BaseHospital.model.addColumn("Función");
            BaseHospital.model.addColumn("VP1");
            BaseHospital.model.addColumn("VP2");
            BaseHospital.model.addColumn("VBR/VMR/VAR");
            BaseHospital.model.addColumn("PE");
            BaseHospital.model.addColumn("LM");

            while(set.next()){
                Object[] pila=new Object[8];
                for (int i=0; i<8; i++){
                    pila[i]=set.getObject(i+1);
                }
                BaseHospital.model.addRow(pila);
            }
            cnn.close();

        }catch(SQLException s){
            JOptionPane.showMessageDialog(null, "¡¡ERROR!!, ¡No se puede mostrar información!", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            s.printStackTrace();
        }
    }
    
    public Icon icono(String camino, int a, int o){
        Icon imagen=new ImageIcon(new ImageIcon(getClass().getResource(camino))
                .getImage().getScaledInstance(a, o, java.awt.Image.SCALE_DEFAULT));
        
        return imagen;
    }
    
    public void habilitarBoton(){
        String name=nombre.getText().trim();
        String function=funcion.getText().trim();
        String v=vp1.getText().trim();
        String p=vp2.getText().trim();
        String ver=vbr.getText().trim();
        String pend=pe.getText().trim();
        String rs=lm.getText().trim();
        if(name.equals("") | function.equals("") | v.equals("") | 
            p.equals("") | ver.equals("") | pend.equals("") | rs.equals("")){
            modificar.setEnabled(false);
        }else{
            modificar.setEnabled(true);
        }
        
        if(name.equals("") | function.equals("") | v.equals("") | 
            p.equals("") | ver.equals("") | pend.equals("") | rs.equals("")){
            registrar.setEnabled(false);
        }else{
            registrar.setEnabled(true);
        }
        
        if(name.equals("") | function.equals("") | v.equals("") | 
            p.equals("") | ver.equals("") | pend.equals("") | rs.equals("")){
            eliminar.setEnabled(false);
        }else{
            eliminar.setEnabled(true);
        }
        
        if(name.equals("") | function.equals("") | v.equals("") | 
            p.equals("") | ver.equals("") | pend.equals("") | rs.equals("")){
            limpiar.setEnabled(false);
        }else{
            limpiar.setEnabled(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        pe = new javax.swing.JTextField();
        nombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        funcion = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lm = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        expediente = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        vbr = new javax.swing.JTextField();
        modificar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        limpiar = new javax.swing.JButton();
        registrar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        vp2 = new javax.swing.JTextField();
        vp1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        generar = new javax.swing.JButton();
        buscar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Sylfaen", 1, 15)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("LM:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 110, -1, -1));

        pe.setBackground(new java.awt.Color(255, 255, 255));
        pe.setFont(new java.awt.Font("Sylfaen", 1, 12)); // NOI18N
        pe.setForeground(new java.awt.Color(0, 0, 0));
        pe.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pe.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                peActionPerformed(evt);
            }
        });
        pe.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                peKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                peKeyTyped(evt);
            }
        });
        getContentPane().add(pe, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 130, 80, 25));

        nombre.setBackground(new java.awt.Color(255, 255, 255));
        nombre.setFont(new java.awt.Font("Sylfaen", 1, 12)); // NOI18N
        nombre.setForeground(new java.awt.Color(0, 0, 0));
        nombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nombre.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreActionPerformed(evt);
            }
        });
        nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nombreKeyReleased(evt);
            }
        });
        getContentPane().add(nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 360, 25));

        jLabel3.setFont(new java.awt.Font("Sylfaen", 1, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("No. de Expediente:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 175, -1, -1));

        funcion.setBackground(new java.awt.Color(255, 255, 255));
        funcion.setFont(new java.awt.Font("Sylfaen", 1, 12)); // NOI18N
        funcion.setForeground(new java.awt.Color(0, 0, 0));
        funcion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        funcion.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        funcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                funcionActionPerformed(evt);
            }
        });
        funcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                funcionKeyReleased(evt);
            }
        });
        getContentPane().add(funcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 270, 25));

        jLabel4.setFont(new java.awt.Font("Sylfaen", 1, 15)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Función");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, -1, -1));

        jLabel5.setFont(new java.awt.Font("Sylfaen", 1, 15)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("VBR/VMR/VAR:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, -1, -1));

        lm.setBackground(new java.awt.Color(255, 255, 255));
        lm.setFont(new java.awt.Font("Sylfaen", 1, 12)); // NOI18N
        lm.setForeground(new java.awt.Color(0, 0, 0));
        lm.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lm.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lmActionPerformed(evt);
            }
        });
        lm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lmKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                lmKeyTyped(evt);
            }
        });
        getContentPane().add(lm, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 130, 80, 25));

        jLabel6.setFont(new java.awt.Font("Sylfaen", 1, 15)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("VP2:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, -1, -1));

        expediente.setBackground(new java.awt.Color(255, 255, 255));
        expediente.setFont(new java.awt.Font("Sylfaen", 1, 12)); // NOI18N
        expediente.setForeground(new java.awt.Color(0, 0, 0));
        expediente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        expediente.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        expediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expedienteActionPerformed(evt);
            }
        });
        expediente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                expedienteKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                expedienteKeyTyped(evt);
            }
        });
        getContentPane().add(expediente, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 170, 80, 25));

        jLabel7.setFont(new java.awt.Font("Sylfaen", 1, 15)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("PE:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, -1, -1));

        vbr.setBackground(new java.awt.Color(255, 255, 255));
        vbr.setFont(new java.awt.Font("Sylfaen", 1, 12)); // NOI18N
        vbr.setForeground(new java.awt.Color(0, 0, 0));
        vbr.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        vbr.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        vbr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vbrActionPerformed(evt);
            }
        });
        vbr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                vbrKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                vbrKeyTyped(evt);
            }
        });
        getContentPane().add(vbr, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, 80, 25));

        modificar.setFont(new java.awt.Font("Sylfaen", 1, 14)); // NOI18N
        modificar.setForeground(new java.awt.Color(0, 0, 0));
        modificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/modificar.png"))); // NOI18N
        modificar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarActionPerformed(evt);
            }
        });
        getContentPane().add(modificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 160, 55, 55));

        eliminar.setFont(new java.awt.Font("Sylfaen", 1, 14)); // NOI18N
        eliminar.setForeground(new java.awt.Color(0, 0, 0));
        eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminar.png"))); // NOI18N
        eliminar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });
        getContentPane().add(eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 225, 55, 55));

        limpiar.setFont(new java.awt.Font("Sylfaen", 1, 14)); // NOI18N
        limpiar.setForeground(new java.awt.Color(0, 0, 0));
        limpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/borrar todo.png"))); // NOI18N
        limpiar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarActionPerformed(evt);
            }
        });
        getContentPane().add(limpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 225, 55, 55));

        registrar.setFont(new java.awt.Font("Sylfaen", 1, 14)); // NOI18N
        registrar.setForeground(new java.awt.Color(0, 0, 0));
        registrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/registrar.png"))); // NOI18N
        registrar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarActionPerformed(evt);
            }
        });
        getContentPane().add(registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 225, 55, 55));

        jLabel8.setFont(new java.awt.Font("Sylfaen", 1, 15)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Nombre:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, -1, -1));

        vp2.setBackground(new java.awt.Color(255, 255, 255));
        vp2.setFont(new java.awt.Font("Sylfaen", 1, 12)); // NOI18N
        vp2.setForeground(new java.awt.Color(0, 0, 0));
        vp2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        vp2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        vp2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vp2ActionPerformed(evt);
            }
        });
        vp2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                vp2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                vp2KeyTyped(evt);
            }
        });
        getContentPane().add(vp2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 80, 25));

        vp1.setBackground(new java.awt.Color(255, 255, 255));
        vp1.setFont(new java.awt.Font("Sylfaen", 1, 12)); // NOI18N
        vp1.setForeground(new java.awt.Color(0, 0, 0));
        vp1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        vp1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        vp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vp1ActionPerformed(evt);
            }
        });
        vp1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                vp1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                vp1KeyTyped(evt);
            }
        });
        getContentPane().add(vp1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 80, 80, 25));

        jLabel9.setFont(new java.awt.Font("Sylfaen", 1, 15)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("VP1:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 60, -1, -1));

        generar.setFont(new java.awt.Font("Sylfaen", 1, 14)); // NOI18N
        generar.setForeground(new java.awt.Color(0, 0, 0));
        generar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/importar.png"))); // NOI18N
        generar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        generar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarActionPerformed(evt);
            }
        });
        getContentPane().add(generar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 70, 70));

        buscar.setFont(new java.awt.Font("Sylfaen", 1, 14)); // NOI18N
        buscar.setForeground(new java.awt.Color(0, 0, 0));
        buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar.png"))); // NOI18N
        buscar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });
        getContentPane().add(buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 160, 55, 55));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/escuela.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 440, 300));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void peActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_peActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_peActionPerformed

    private void nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreActionPerformed

    private void funcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_funcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_funcionActionPerformed

    private void lmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lmActionPerformed

    private void expedienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expedienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_expedienteActionPerformed

    private void vbrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vbrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vbrActionPerformed

    private void vp2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vp2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vp2ActionPerformed

    private void vp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vp1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vp1ActionPerformed

    private void limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarActionPerformed
        nombre.setText("");
        funcion.setText("");
        vp1.setText("");
        vp2.setText("");
        vbr.setText("");
        pe.setText("");
        lm.setText("");
        expediente.setEditable(true);
        nombre.setEditable(true);
        funcion.setEditable(true);
        expediente.setText("");
        limpiar.setEnabled(false);
        buscar.setEnabled(false);
        registrar.setEnabled(false);
        eliminar.setEnabled(false);
        modificar.setEnabled(false);
    }//GEN-LAST:event_limpiarActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        try{
            Connection cnn=DriverManager.getConnection(url, usuario, password);
            PreparedStatement psp=cnn.prepareStatement("SELECT * FROM VACACIONES WHERE EXPEDIENTE="+Integer.parseInt(expediente.getText().trim()));
            
            ResultSet set=psp.executeQuery();
            
            if(set.next()){
                nombre.setText(set.getString("NOMBRE"));
                funcion.setText(set.getString("FUNCION"));
                vp1.setText(String.valueOf(set.getInt("VP1")));
                vp2.setText(String.valueOf(set.getInt("VP2")));
                vbr.setText(String.valueOf(set.getInt("VBR")));
                pe.setText(String.valueOf(set.getInt("PE")));
                lm.setText(String.valueOf(set.getInt("LM")));
                buscar.setEnabled(true);
                eliminar.setEnabled(true);
                modificar.setEnabled(true);
                limpiar.setEnabled(true);
                //expediente.setEditable(false);
                nombre.setEditable(false);
                funcion.setEditable(false);
            }else{
                JOptionPane.showMessageDialog(null, "El expediente no existe", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                buscar.setEnabled(false);
                expediente.setText("");
                nombre.setText("");
                funcion.setText("");
                vp1.setText("");
                vp2.setText("");
                vbr.setText("");
                pe.setText("");
                lm.setText("");
                buscar.setEnabled(false);
                eliminar.setEnabled(false);
                modificar.setEnabled(false);
                limpiar.setEnabled(false);
                expediente.setEditable(true);
                nombre.setEditable(true);
                funcion.setEditable(true);
            }
            
        }catch(SQLException s){
            JOptionPane.showMessageDialog(null, "Error al buscar usuario", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            System.err.println("Error: "+s);
        }
    }//GEN-LAST:event_buscarActionPerformed

    private void expedienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_expedienteKeyReleased
        String busqueda=expediente.getText().trim();
            if(busqueda.isEmpty()){
                buscar.setEnabled(false);
            }else{
                buscar.setEnabled(true);
            }
    }//GEN-LAST:event_expedienteKeyReleased

    private void registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarActionPerformed
        try{
            Connection cnn=DriverManager.getConnection(url, usuario, password);
            PreparedStatement psp=cnn.prepareStatement("INSERT INTO VACACIONES VALUES(?,?,?,?,?,?,?,?)");
            
            psp.setInt(1, Integer.parseInt(expediente.getText().trim()));
            psp.setString(2, nombre.getText().trim());
            psp.setString(3, funcion.getText().trim());
            psp.setInt(4, Integer.parseInt(vp1.getText().trim()));
            psp.setInt(5, Integer.parseInt(vp2.getText().trim()));
            psp.setInt(6, Integer.parseInt(vbr.getText().trim()));
            psp.setInt(7, Integer.parseInt(pe.getText().trim()));
            psp.setInt(8, Integer.parseInt(lm.getText().trim()));
            
            int bandera=psp.executeUpdate();
            if(bandera==1){
                expediente.setBackground(Color.green);
                nombre.setBackground(Color.green);
                funcion.setBackground(Color.green);
                vp1.setBackground(Color.green);
                vp2.setBackground(Color.green);
                vbr.setBackground(Color.green);
                pe.setBackground(Color.green);
                lm.setBackground(Color.green);
                JOptionPane.showMessageDialog(null, "Expediente insertado exitosamente",
                    "Mensaje", JOptionPane.INFORMATION_MESSAGE);                                
            }else{
                JOptionPane.showMessageDialog(null, "Hubo un error al insertar expediente",
                    "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }            
        }catch(SQLException s){
            JOptionPane.showMessageDialog(null, "Error al registrar expediente", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            System.err.println("Error: "+s);
        }
        if(BaseHospital.sesion==1){
            metodo();
        }else{
            
        }
    }//GEN-LAST:event_registrarActionPerformed

    private void vp1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vp1KeyTyped
        int llave=evt.getKeyChar();
            
        if(!(llave>=48 & llave<=57)){
            evt.consume();
        }
            
        if(vp1.getText().length()>=4){
            evt.consume();
        }
    }//GEN-LAST:event_vp1KeyTyped

    private void vp2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vp2KeyTyped
        int llave=evt.getKeyChar();
            
        if(!(llave>=48 & llave<=57)){
            evt.consume();
        }
            
        if(vp2.getText().length()>=4){
            evt.consume();
        }
    }//GEN-LAST:event_vp2KeyTyped

    private void vbrKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vbrKeyTyped
        int llave=evt.getKeyChar();
            
        if(!(llave>=48 & llave<=57)){
            evt.consume();
        }
            
        if(vbr.getText().length()>=4){
            evt.consume();
        }
    }//GEN-LAST:event_vbrKeyTyped

    private void peKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_peKeyTyped
        int llave=evt.getKeyChar();
        
        if(!(llave>=48 & llave<=57)){
            evt.consume();
        }
            
        if(pe.getText().length()>=4){
            evt.consume();
        }
    }//GEN-LAST:event_peKeyTyped

    private void lmKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lmKeyTyped
        int llave=evt.getKeyChar();
            
        if(!(llave>=48 & llave<=57)){
            evt.consume();
        }
            
        if(lm.getText().length()>=4){
            evt.consume();
        }
    }//GEN-LAST:event_lmKeyTyped

    private void expedienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_expedienteKeyTyped
        int llave=evt.getKeyChar();
            
        if(!(llave>=48 & llave<=57)){
            evt.consume();
        }
            
        if(expediente.getText().length()>=7){
            evt.consume();
        }
    }//GEN-LAST:event_expedienteKeyTyped

    private void nombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreKeyReleased
        habilitarBoton();
    }//GEN-LAST:event_nombreKeyReleased

    private void funcionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_funcionKeyReleased
        habilitarBoton();
    }//GEN-LAST:event_funcionKeyReleased

    private void vp1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vp1KeyReleased
        habilitarBoton();
    }//GEN-LAST:event_vp1KeyReleased

    private void vp2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vp2KeyReleased
        habilitarBoton();
    }//GEN-LAST:event_vp2KeyReleased

    private void vbrKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vbrKeyReleased
        habilitarBoton();
    }//GEN-LAST:event_vbrKeyReleased

    private void peKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_peKeyReleased
        habilitarBoton();
    }//GEN-LAST:event_peKeyReleased

    private void lmKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lmKeyReleased
        habilitarBoton();
    }//GEN-LAST:event_lmKeyReleased

    private void modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarActionPerformed
        String[] op={"Si", "No"};
        int modify=JOptionPane.showOptionDialog(null, "Los datos serán modificados, ¿Deseas realizar esta acción?", "Advertencia", 
            JOptionPane.INFORMATION_MESSAGE, JOptionPane.YES_NO_OPTION, icono("/imagenes/warning.png", 40, 40), op, op[0]);
        if(modify==JOptionPane.YES_OPTION){
            try{
                Connection cnn=DriverManager.getConnection(url, usuario, password);
                PreparedStatement psp=cnn.prepareStatement("UPDATE VACACIONES SET VP1=?, VP2=?,"
                        + " VBR=?, PE=?, LM=? WHERE EXPEDIENTE="+Integer.parseInt(expediente.getText().trim()));
                
                psp.setInt(1, Integer.parseInt(vp1.getText().trim()));
                psp.setInt(2, Integer.parseInt(vp2.getText().trim()));
                psp.setInt(3, Integer.parseInt(vbr.getText().trim()));
                psp.setInt(4, Integer.parseInt(pe.getText().trim()));
                psp.setInt(5, Integer.parseInt(lm.getText().trim()));
                
                int bandera=psp.executeUpdate();
                if(bandera==1){
                    vp1.setBackground(Color.green);
                    vp2.setBackground(Color.green);
                    vbr.setBackground(Color.green);
                    pe.setBackground(Color.green);
                    lm.setBackground(Color.green);
                    
                    JOptionPane.showMessageDialog(null, "Expediente actualizado exitosamente", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                    this.dispose();                    
                }else{
                    JOptionPane.showMessageDialog(null, "No se pudo actualizar el expediente", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                }  
                             
            }catch(SQLException s){
                JOptionPane.showMessageDialog(null, "Error al actualizar datos", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                System.err.println("Error: "+s.getMessage());
            }
            if(BaseHospital.sesion==1){
                metodo();
            }else{
                    
            } 
        }
    }//GEN-LAST:event_modificarActionPerformed
        
    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        String[] op={"Si", "No"};
        int delete=JOptionPane.showOptionDialog(null, "¿Deseas eliminar este expediente?", "Advertencia", 
            JOptionPane.INFORMATION_MESSAGE, JOptionPane.YES_NO_OPTION, icono("/imagenes/eliminar.png", 40, 40), op, op[0]);
        if(delete==JOptionPane.YES_OPTION){
            try{
                Connection cnn=DriverManager.getConnection(url, usuario, password);
                PreparedStatement psp=cnn.prepareStatement("DELETE FROM VACACIONES WHERE EXPEDIENTE="+Integer.parseInt(expediente.getText().trim()));
            
                int bandera=psp.executeUpdate();
                if(bandera==1){
                    expediente.setBackground(Color.green);
                    nombre.setBackground(Color.green);
                    funcion.setBackground(Color.green);
                    vp1.setBackground(Color.green);
                    vp2.setBackground(Color.green);
                    vbr.setBackground(Color.green);
                    pe.setBackground(Color.green);
                    lm.setBackground(Color.green);
                    expediente.setText("");
                    nombre.setText("");
                    funcion.setText("");
                    vp1.setText("");
                    vp2.setText("");
                    vbr.setText("");
                    pe.setText("");
                    lm.setText("");
                    
                    JOptionPane.showMessageDialog(null, "Expediente eliminado exitosamente",
                            "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                    this.dispose();                    
                }else{
                    JOptionPane.showMessageDialog(null, "No se pudo eliminar el expediente", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                } 
            }catch(HeadlessException | NumberFormatException | SQLException s){
                JOptionPane.showMessageDialog(null, "Error al eliminar expediente", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                System.err.println("Error: "+s.getMessage());
            }
            if(BaseHospital.sesion==1){
                metodo();
            }else{
                
            }
        }
    }//GEN-LAST:event_eliminarActionPerformed

    private void generarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarActionPerformed
        try{
            String []op={"Definir ruta", "Ruta predeterminada", "Cancelar"};
            String selector=(String)JOptionPane.showInputDialog(null, "Selecciona una opción", "Opciones", 
                    HEIGHT, icono("/imagenes/guardar.png", 30, 30), op, op[0]);
            Document documento=new Document();
            if(selector.equals("Definir ruta")){
                JFileChooser seleccion=new JFileChooser();
                int opcion=seleccion.showSaveDialog(this);                
                if(opcion==seleccion.APPROVE_OPTION){
                    try{
                        String archivo=seleccion.getSelectedFile()+".pdf";
                        FileOutputStream file=new FileOutputStream(archivo);
                        PdfWriter.getInstance(documento, file);
                        
                        PdfPTable tabla=new PdfPTable(8);
                        tabla.addCell("No. de Expediente");
                        tabla.addCell("Nombre");
                        tabla.addCell("Función");
                        tabla.addCell("VP1");
                        tabla.addCell("VP2");
                        tabla.addCell("VBR/VMR/VAR");
                        tabla.addCell("PE");
                        tabla.addCell("LM");
                        
                        com.itextpdf.text.Image logo=com.itextpdf.text.Image.getInstance("src/imagenes/salud.png");
                        logo.scaleToFit(120, 250);
                        logo.setAlignment(Chunk.ALIGN_LEFT);
                        
                        Paragraph parrafo=new Paragraph();
                        parrafo.setAlignment(Paragraph.ALIGN_CENTER);
                        parrafo.setFont(FontFactory.getFont("Sylfaen", 12, 1, BaseColor.RED));
                        parrafo.add("LISTA DE EXPEDIENTES\n\n");
                        
                        documento.open();
                        documento.add(logo);
                        
                        try{
                            Connection cnn=DriverManager.getConnection(url, usuario, password);
                            PreparedStatement psp=cnn.prepareStatement("SELECT * FROM VACACIONES");
                            
                            ResultSet set=psp.executeQuery();
                            
                            if(set.next()){
                                do{
                                    tabla.addCell(String.valueOf(set.getInt(1)));
                                    tabla.addCell(set.getString(2));
                                    tabla.addCell(set.getString(3));
                                    tabla.addCell(String.valueOf(set.getInt(4)));
                                    tabla.addCell(String.valueOf(set.getInt(5)));
                                    tabla.addCell(String.valueOf(set.getInt(6)));
                                    tabla.addCell(String.valueOf(set.getInt(7)));
                                    tabla.addCell(String.valueOf(set.getInt(8)));
                                }while(set.next());
                                documento.add(parrafo);
                                documento.add(tabla);
                            }else{
                                Paragraph texto=new Paragraph();
                                texto.setAlignment(Paragraph.ALIGN_CENTER);
                                texto.setFont(FontFactory.getFont("Sylfaen", 12, 1, BaseColor.RED));
                                texto.add("No hay expedientes todavía\n\n");
                                documento.add(texto);
                            }
                            
                            documento.close();
                            JOptionPane.showMessageDialog(null, "Reporte generado exitosamente\nen: "+archivo, "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                        }catch(DocumentException | SQLException s){
                            JOptionPane.showMessageDialog(null, "¡¡ERROR!!, ¡Datos no encontrados!", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                            System.err.println("Error: "+s.getMessage());
                        }
                        
                    }catch(DocumentException | IOException s){
                        JOptionPane.showMessageDialog(null, "¡¡ERROR!!, ¡No se pudo generar el reporte!", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                        System.err.println("Error: "+s.getMessage());
                    }
                }
            }else if(selector.equals("Ruta predeterminada")){
                try{
                    String ruta=System.getProperty("user.home");
                    FileOutputStream file=new FileOutputStream(ruta+"/desktop/Reporte de expedientes.pdf");
                    PdfWriter.getInstance(documento, file);
                    
                    PdfPTable tabla=new PdfPTable(8);
                        tabla.addCell("Expediente");
                        tabla.addCell("Nombre");
                        tabla.addCell("Función");
                        tabla.addCell("VP1");
                        tabla.addCell("VP2");
                        tabla.addCell("VBR/VMR/VAR");
                        tabla.addCell("PE");
                        tabla.addCell("LM");
                        
                        com.itextpdf.text.Image logo=com.itextpdf.text.Image.getInstance("src/imagenes/salud.png");
                        logo.scaleToFit(120, 250);
                        logo.setAlignment(Chunk.ALIGN_LEFT);
                        
                        Paragraph parrafo=new Paragraph();
                        parrafo.setAlignment(Paragraph.ALIGN_CENTER);
                        parrafo.setFont(FontFactory.getFont("Sylfaen", 12, 1, BaseColor.RED));
                        parrafo.add("LISTA DE EXPEDIENTES\n\n");
                        
                        documento.open();
                        documento.add(logo);
                        
                        try{
                            Connection cnn=DriverManager.getConnection(url, usuario, password);
                            PreparedStatement psp=cnn.prepareStatement("SELECT * FROM VACACIONES");
                            
                            ResultSet set=psp.executeQuery();
                            
                            if(set.next()){
                                do{
                                    tabla.addCell(String.valueOf(set.getInt(1)));
                                    tabla.addCell(set.getString(2));
                                    tabla.addCell(set.getString(3));
                                    tabla.addCell(String.valueOf(set.getInt(4)));
                                    tabla.addCell(String.valueOf(set.getInt(5)));
                                    tabla.addCell(String.valueOf(set.getInt(6)));
                                    tabla.addCell(String.valueOf(set.getInt(7)));
                                    tabla.addCell(String.valueOf(set.getInt(8)));
                                }while(set.next());
                                documento.add(parrafo);
                                documento.add(tabla);
                            }else{
                                Paragraph texto=new Paragraph();
                                texto.setAlignment(Paragraph.ALIGN_CENTER);
                                texto.setFont(FontFactory.getFont("Sylfaen", 12, 1, BaseColor.RED));
                                texto.add("No hay expedientes todavía\n\n");
                                documento.add(texto);
                            }
                            
                            documento.close();
                            JOptionPane.showMessageDialog(null, "Reporte generado exitosamente en\n"
                                +"el escriotorio de esta computadora", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                        }catch(DocumentException | SQLException s){
                            JOptionPane.showMessageDialog(null, "¡¡ERROR!!, ¡Datos no encontrados!", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                            System.err.println("Error: "+s.getMessage());
                        }
                }catch(DocumentException | HeadlessException | IOException s){
                    JOptionPane.showMessageDialog(null, "¡¡ERROR!!, ¡No se pudo generar el reporte!", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                    System.err.println("Error: "+s.getMessage());
                }
            }else if(selector.equals("Cancelar")){
                JOptionPane.showMessageDialog(null, "Operación cancelada", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }
        }catch(Exception s){
            
        }
    }//GEN-LAST:event_generarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Hospital.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Hospital.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Hospital.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Hospital.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Hospital().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton buscar;
    public static javax.swing.JButton eliminar;
    public static javax.swing.JTextField expediente;
    public static javax.swing.JTextField funcion;
    private javax.swing.JButton generar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JButton limpiar;
    public static javax.swing.JTextField lm;
    public static javax.swing.JButton modificar;
    public static javax.swing.JTextField nombre;
    public static javax.swing.JTextField pe;
    public static javax.swing.JButton registrar;
    public static javax.swing.JTextField vbr;
    public static javax.swing.JTextField vp1;
    public static javax.swing.JTextField vp2;
    // End of variables declaration//GEN-END:variables
}
