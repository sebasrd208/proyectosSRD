package basehospital;
import com.itextpdf.text.pdf.*;
import javax.swing.table.*;
import com.itextpdf.text.*;
import java.awt.event.*;
import javax.swing.*;
import java.sql.*;
import java.awt.*;
import java.io.*;

/**
 *
 * @author sebas
 */
 public class Base_Hospital extends javax.swing.JFrame{

    public static DefaultTableModel model=new DefaultTableModel();
    public static int sesion=1;
    
    public static String url="jdbc:mysql://localhost/hospital";
    public static String usuario="root";
    public static String password="";
    public Base_Hospital(){
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/imagenes/database.png")).getImage());
        setTitle("Base de datos - Hospital Tlatlauquitepec");
        setLocationRelativeTo(null);
        setResizable(false);
                
        try{
            Connection cnn=Conexion.conectar();
            PreparedStatement psp=cnn.prepareStatement("SELECT * FROM VACACIONES");

            tabla=new JTable(model);
            scroll.setViewportView(tabla);
            
            ResultSet set=psp.executeQuery();

            model.addColumn("No. de Expediente");
            model.addColumn("Nombre");
            model.addColumn("Función");
            model.addColumn("VP1");
            model.addColumn("VP2");
            model.addColumn("VBR/VMR/VAR");
            model.addColumn("PE");
            model.addColumn("LM");

            while(set.next()){
                Object[] pila=new Object[8];
                for (int i=0; i<8; i++){
                    pila[i]=set.getObject(i+1);
                }
                model.addRow(pila);
            }
            cnn.close();

        }catch(SQLException s){
            JOptionPane.showMessageDialog(null, "¡¡ERROR!!, ¡No se puede mostrar información!", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            s.printStackTrace();
        }
        
        
        tabla.addMouseListener(new MouseAdapter(){
            @Override
            public void mouseClicked(MouseEvent s){               
                int fila=tabla.rowAtPoint(s.getPoint());
                int columna=0;
                try{
                    Connection cnn=Conexion.conectar();
                    PreparedStatement psp=cnn.prepareStatement("SELECT * FROM VACACIONES WHERE EXPEDIENTE="+tabla.getValueAt(fila, columna));
                    
                    ResultSet set=psp.executeQuery();
                    
                    if(fila>-1){
                        if(set.next()){
                            Hospital byoujin=new Hospital();
                            byoujin.setVisible(true);
                            byoujin.expediente.setText(set.getString("EXPEDIENTE"));
                            byoujin.nombre.setText(set.getString("NOMBRE"));
                            byoujin.funcion.setText(set.getString("FUNCION"));
                            byoujin.vp1.setText(String.valueOf(set.getInt("VP1")));
                            byoujin.vp2.setText(String.valueOf(set.getInt("VP2")));
                            byoujin.vbr.setText(String.valueOf(set.getInt("VBR")));
                            byoujin.pe.setText(String.valueOf(set.getInt("PE")));
                            byoujin.lm.setText(String.valueOf(set.getInt("LM")));
                            byoujin.buscar.setEnabled(true);
                            byoujin.buscar.setVisible(false);
                            byoujin.registrar.setEnabled(true);
                            byoujin.registrar.setVisible(false);
                            byoujin.eliminar.setEnabled(true);
                            byoujin.modificar.setEnabled(false);
                            byoujin.limpiar.setVisible(false);
                            byoujin.expediente.setEditable(false);
                            byoujin.nombre.setEditable(false);
                            byoujin.funcion.setEditable(false);
                        }
                    }                    
                }catch(HeadlessException | SQLException e){
                    JOptionPane.showMessageDialog(null, "¡ERROR!, No se pudieron mostrar los datos", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                    System.err.println("Error: "+e.getMessage());
                }
            }
        });
    }

    public Icon icono(String camino, int x, int y){
        Icon imagen=new ImageIcon(new ImageIcon(getClass().getResource(camino))
                .getImage().getScaledInstance(x, y, java.awt.Image.SCALE_DEFAULT));
        
        return imagen;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scroll = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        nuevo = new javax.swing.JButton();
        generar = new javax.swing.JButton();
        cerrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        scroll.setViewportView(tabla);

        getContentPane().add(scroll, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 870, 170));

        nuevo.setFont(new java.awt.Font("Sylfaen", 1, 12)); // NOI18N
        nuevo.setText("Nuevo expediente");
        nuevo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        nuevo.setFocusPainted(false);
        nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoActionPerformed(evt);
            }
        });
        getContentPane().add(nuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 130, 25));

        generar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/importar.png"))); // NOI18N
        generar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        generar.setFocusPainted(false);
        generar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarActionPerformed(evt);
            }
        });
        getContentPane().add(generar, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 220, 70, 70));

        cerrar.setFont(new java.awt.Font("Sylfaen", 1, 12)); // NOI18N
        cerrar.setText("Cerrar sesión");
        cerrar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cerrar.setFocusPainted(false);
        cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarActionPerformed(evt);
            }
        });
        getContentPane().add(cerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 220, 100, 25));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondo.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 320));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        
    }//GEN-LAST:event_tablaMouseClicked

    private void generarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarActionPerformed
        try{
            String []op={"Definir ruta", "Ruta predeterminada", "Cancelar"};
            String selector=(String)JOptionPane.showInputDialog(null, "Selecciona una opción", "Opciones", 
                    HEIGHT, icono("/imagenes/guardar.png", 30, 30), op, op[0]);
            Document documento=new Document();
            if(selector.equals("Definir ruta")){
                JFileChooser seleccion=new JFileChooser();
                int opcion=seleccion.showSaveDialog(this);
                
                if(opcion==seleccion.APPROVE_OPTION){
                    try{
                        String archivo=seleccion.getSelectedFile()+".pdf";
                        FileOutputStream file=new FileOutputStream(archivo);
                        PdfWriter.getInstance(documento, file);
                        
                        PdfPTable tabla=new PdfPTable(8);
                        tabla.addCell("Expediente");
                        tabla.addCell("Nombre");
                        tabla.addCell("Función");
                        tabla.addCell("VP1");
                        tabla.addCell("VP2");
                        tabla.addCell("VBR/VMR/VAR");
                        tabla.addCell("PE");
                        tabla.addCell("LM");
                        
                        com.itextpdf.text.Image logo=com.itextpdf.text.Image.getInstance("src/imagenes/salud.png");
                        logo.scaleToFit(120, 250);
                        logo.setAlignment(Chunk.ALIGN_LEFT);
                        
                        Paragraph parrafo=new Paragraph();
                        parrafo.setAlignment(Paragraph.ALIGN_CENTER);
                        parrafo.setFont(FontFactory.getFont("Sylfaen", 12, 1, BaseColor.RED));
                        parrafo.add("LISTA DE EXPEDIENTES\n\n");
                        
                        documento.open();
                        documento.add(logo);
                        
                        try{
                            Connection cnn=Conexion.conectar();
                            PreparedStatement psp=cnn.prepareStatement("SELECT * FROM VACACIONES");
                                
                            ResultSet set=psp.executeQuery();
                            
                            if(set.next()){
                                do{
                                    tabla.addCell(String.valueOf(set.getInt(1)));
                                    tabla.addCell(set.getString(2));
                                    tabla.addCell(set.getString(3));
                                    tabla.addCell(String.valueOf(set.getInt(4)));
                                    tabla.addCell(String.valueOf(set.getInt(5)));
                                    tabla.addCell(String.valueOf(set.getInt(6)));
                                    tabla.addCell(String.valueOf(set.getInt(7)));
                                    tabla.addCell(String.valueOf(set.getInt(8)));
                                }while(set.next());
                                documento.add(parrafo);
                                documento.add(tabla);
                            }else{
                                Paragraph texto=new Paragraph();
                                texto.setAlignment(Paragraph.ALIGN_CENTER);
                                texto.setFont(FontFactory.getFont("Sylfaen", 12, 1, BaseColor.RED));
                                texto.add("No hay expedientes todavía\n\n");
                                documento.add(texto);
                            }
                            documento.close();
                            JOptionPane.showMessageDialog(null, "Reporte generado exitosamente\nen: "+archivo, "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                        }catch(DocumentException | SQLException s){
                            JOptionPane.showMessageDialog(null, "¡¡ERROR!!, ¡Datos no encontrados!", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                            System.err.println("Error: "+s.getMessage());
                        }
                        
                    }catch(DocumentException | IOException s){
                        JOptionPane.showMessageDialog(null, "¡¡ERROR!!, ¡No se pudo generar el reporte!", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                        System.err.println("Error: "+s.getMessage());
                    }
                }
            }else if(selector.equals("Ruta predeterminada")){
                try{
                    String ruta=System.getProperty("user.home");
                    FileOutputStream file=new FileOutputStream(ruta+"/desktop/Reporte de expedientes.pdf");
                    PdfWriter.getInstance(documento, file);
                    
                    PdfPTable tabla=new PdfPTable(8);
                    tabla.addCell("No. de Expediente");
                    tabla.addCell("Nombre");
                    tabla.addCell("Función");
                    tabla.addCell("VP1");
                    tabla.addCell("VP2");
                    tabla.addCell("VBR/VMR/VAR");
                    tabla.addCell("PE");
                    tabla.addCell("LM");
                    
                    com.itextpdf.text.Image logo=com.itextpdf.text.Image.getInstance("src/imagenes/salud.png");
                    logo.scaleToFit(120, 250);
                    logo.setAlignment(Chunk.ALIGN_LEFT);
                        
                    Paragraph parrafo=new Paragraph();
                    parrafo.setAlignment(Paragraph.ALIGN_CENTER);
                    parrafo.setFont(FontFactory.getFont("Sylfaen", 12, 1, BaseColor.RED));
                    parrafo.add("LISTA DE EXPEDIENTES\n\n");
                        
                    documento.open();
                    documento.add(logo);
                    
                    try{
                        Connection cnn=Conexion.conectar();
                        PreparedStatement psp=cnn.prepareStatement("SELECT * FROM VACACIONES");
                        
                        ResultSet set=psp.executeQuery();
                            
                        if(set.next()){
                            do{
                                tabla.addCell(String.valueOf(set.getInt(1)));
                                tabla.addCell(set.getString(2));
                                tabla.addCell(set.getString(3));
                                tabla.addCell(String.valueOf(set.getInt(4)));
                                tabla.addCell(String.valueOf(set.getInt(5)));
                                tabla.addCell(String.valueOf(set.getInt(6)));
                                tabla.addCell(String.valueOf(set.getInt(7)));
                                tabla.addCell(String.valueOf(set.getInt(8)));
                            }while(set.next());
                            documento.add(parrafo);
                            documento.add(tabla);
                        }else{
                            Paragraph texto=new Paragraph();
                            texto.setAlignment(Paragraph.ALIGN_CENTER);
                            texto.setFont(FontFactory.getFont("Sylfaen", 12, 1, BaseColor.RED));
                            texto.add("No hay expedientes todavía\n\n");                                documento.add(texto);
                        }
                            
                        documento.close();
                        JOptionPane.showMessageDialog(null, "Reporte generado exitosamente en\n"
                            +"el escriotorio de esta computadora", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                    }catch(DocumentException | SQLException s){
                        JOptionPane.showMessageDialog(null, "¡¡ERROR!!, ¡Datos no encontrados!", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                        System.err.println("Error: "+s.getMessage());
                    }
                }catch(DocumentException | HeadlessException | IOException s){
                    JOptionPane.showMessageDialog(null, "¡¡ERROR!!, ¡No se pudo generar el reporte!", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                    System.err.println("Error: "+s.getMessage());
                }
            }else if(selector.equals("Cancelar")){
                JOptionPane.showMessageDialog(null, "Operación cancelada", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }
        }catch(Exception s){
            
        }
    }//GEN-LAST:event_generarActionPerformed

    private void cerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarActionPerformed
        Icon icono=null;
        String []op={"Si", "No"};
        int close=JOptionPane.showOptionDialog(null, "¿Deseas cerra sesión?", "Advertencia", JOptionPane.INFORMATION_MESSAGE, HEIGHT, icono, op, op[0]);
        if(close==JOptionPane.YES_OPTION){
            Login zero = new Login();
            zero.setBounds(0, 0, 319, 500);
            zero.setVisible(true);
            zero.setResizable(false);
            zero.setLocationRelativeTo(null);
            dispose();
            JOptionPane.showMessageDialog(null, "Sesión finalizada", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_cerrarActionPerformed

    private void nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoActionPerformed
        Hospital byoujin=new Hospital();
        byoujin.setVisible(true);
        byoujin.setResizable(false);
        byoujin.setLocationRelativeTo(null);
        byoujin.modificar.setVisible(false);
        byoujin.buscar.setVisible(false);
        byoujin.eliminar.setVisible(false);
        
        JOptionPane.showMessageDialog(null, "Nuevo expediente", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_nuevoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Base_Hospital.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Base_Hospital.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Base_Hospital.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Base_Hospital.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Base_Hospital().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cerrar;
    private javax.swing.JButton generar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton nuevo;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
